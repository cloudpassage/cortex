[service]
module = scheduler

[task_config]
task_name = scans_to_s3
image = docker.io/halotools/halo-scans-archiver:v0.18
retry = 5
read_only = false

[log_config]
task_started = Starting export of yesterday's Halo scans to S3
task_finished = Finished export of yesterday's Halo scans to S3
task_retried = Retry scheduled for export of yesterday's Halo scans to S3
task_failed = Failed to export yesterday's Halo scans to S3

[schedule]
# Treat these settings just like a crontab schedule.  All times are in GMT.
minute = 01
hour = 12
day_of_week = *
day_of_month = *
month_of_year = *

[env_literal]
# This environment variable must be configured, or the task will error out!
AWS_S3_BUCKET =

[env_expand]
# These environment variables are required to be set in the celeryworker
# service. Under normal circumstances, you should not have to change any
# of the configuration settings below this point in this configuration
# file. The default configuration for Cortex has these environment
# variables already set for the celeryworker service, but notes are included
# below to aid in troubleshooting.

# HALO_API_KEY and HALO_API_SECRET_KEY are the read-only API key and secret
# used to retrieve events from your CloudPassage Halo account.
HALO_API_KEY = HALO_API_KEY
HALO_API_SECRET_KEY = HALO_API_SECRET_KEY

# The HALO_API_HOSTNAME variable should be set to 'api.cloudpassage.com'
# unless directed otherwise by your CloudPassage representative.
HALO_API_HOSTNAME = HALO_API_HOSTNAME

# The AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY environment variables must
# have sufficient access to the S3 bucket named by AWS_S3_BUCKET (configured
# above) to create and update files.
AWS_ACCESS_KEY_ID = AWS_ACCESS_KEY_ID
AWS_SECRET_ACCESS_KEY = AWS_SECRET_ACCESS_KEY

# The HTTPS_PROXY variable allows the celeryworker to reach out to the
# CloudPassage and Amazon services via a proxy server.
HTTPS_PROXY = HTTPS_PROXY
